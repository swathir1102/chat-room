{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create({\n  channel: \"RoomChannel\",\n  room_id: 4\n}, {\n  connected: function connected() {\n    console.log(\"connected...\");\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {\n    console.log(data);\n    var element = document.getElementById('user-id');\n    var user_id = Number(element.getAttribute('data-user-id'));\n    var html;\n\n    if (user_id === data.message.user_id) {\n      html = data.mine;\n    } else {\n      html = data.theirs;\n    }\n\n    var messageContainer = document.getElementById('messages');\n    messageContainer.innerHTML = messageContainer.innerHTML + data.html;\n  }\n});","map":{"version":3,"sources":["/Users/swathi/Documents/WebEx/chat-room/app/javascript/channels/room_channel.js"],"names":["consumer","subscriptions","create","channel","room_id","connected","console","log","disconnected","received","data","element","document","getElementById","user_id","Number","getAttribute","html","message","mine","theirs","messageContainer","innerHTML"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B;AAAEC,EAAAA,OAAO,EAAE,aAAX;AAA0BC,EAAAA,OAAO,EAAE;AAAnC,CAA9B,EAAsE;AACpEC,EAAAA,SADoE,uBACxD;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GAHmE;AAKpEC,EAAAA,YALoE,0BAKrD,CACb;AACD,GAPmE;AASpEC,EAAAA,QAToE,oBAS3DC,IAT2D,EASrD;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEA,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,QAAMC,OAAO,GAAGC,MAAM,CAACJ,OAAO,CAACK,YAAR,CAAqB,cAArB,CAAD,CAAtB;AAEA,QAAIC,IAAJ;;AAEA,QAAIH,OAAO,KAAKJ,IAAI,CAACQ,OAAL,CAAaJ,OAA7B,EAAuC;AACrCG,MAAAA,IAAI,GAAGP,IAAI,CAACS,IAAZ;AACD,KAFD,MAEO;AACLF,MAAAA,IAAI,GAAGP,IAAI,CAACU,MAAZ;AACD;;AAED,QAAMC,gBAAgB,GAAGT,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAzB;AACAQ,IAAAA,gBAAgB,CAACC,SAAjB,GAA6BD,gBAAgB,CAACC,SAAjB,GAA2BZ,IAAI,CAACO,IAA7D;AACD;AAzBmE,CAAtE","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create({ channel: \"RoomChannel\", room_id: 4 }, {\n  connected() {\n    console.log(\"connected...\")\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    console.log(data)\n\n    const element = document.getElementById('user-id');\n    const user_id = Number(element.getAttribute('data-user-id'));\n\n    let html;\n\n    if (user_id === data.message.user_id ) {\n      html = data.mine\n    } else {\n      html = data.theirs\n    }\n\n    const messageContainer = document.getElementById('messages');\n    messageContainer.innerHTML = messageContainer.innerHTML+data.html\n  }\n});\n"]},"metadata":{},"sourceType":"module"}